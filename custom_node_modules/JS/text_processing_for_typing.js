const puppeteer = require('puppeteer');
const fs = require('fs');

let textForTyping;

async function getTextForTyping(res, url) {
  // делаем цикл for и проходимся по тексатм и корректируем как нам нужно
  const browser = await puppeteer.launch({
    headless: 'new',
  });
  const page = await browser.newPage();
  // await page.setViewport({ width: 1080, height: 1024 });

  let source = 'https://ilibrary.ru';

  await page.goto(source);
  let textLink = await page.$eval('.ltst_l > li > a', (elem) =>
    elem.getAttribute('href')
  );
  console.log(textLink);

  await page.goto(`${source}${textLink}`);
  textForTyping = await page.$eval('.p', (elem) => elem.textContent);
  textForTyping = textForTyping.trim();
  console.log(textForTyping);

  await browser.close();

  let text = {
    text: textForTyping,
  };

  postText(res, url, text);
}

async function postText(res, url, text) {
  fs.writeFile(`.${url}`, JSON.stringify(text), (error, data) => {
    if (error) {
      console.log(`ошибка при записи текста в ${url}`);
      return;
    }

    console.log(`текст записан в ${url}`);
    fs.readFile(`.${url}`, { flag: 'r' }, (error, data) => {
      if (error) {
        console.log(`ошибка при чтении файла .${url}`);
        res.end();
        return;
      }
      res.end(data);
      return;
    });
  });
}

exports.getTextForTyping = getTextForTyping;
